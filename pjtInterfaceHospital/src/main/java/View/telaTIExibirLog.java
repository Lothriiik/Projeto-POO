/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package View;


import Model.query;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author uande
 */
public class telaTIExibirLog extends javax.swing.JInternalFrame {

    /**
     * Creates new form telaConsulta
     */
    public telaTIExibirLog() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        conTabela = new javax.swing.JTable();
        conSair = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Tela de Consulta do Prontuario de Pacientes Ativos.");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        conTabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Log"
            }
        ));
        jScrollPane1.setViewportView(conTabela);
        if (conTabela.getColumnModel().getColumnCount() > 0) {
            conTabela.getColumnModel().getColumn(0).setPreferredWidth(40);
        }

        conSair.setText("Sair");
        conSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                conSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 623, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addComponent(conSair)
                .addGap(43, 43, 43))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(conSair, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        setBounds(0, 0, 831, 468);
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        

        DefaultTableModel mp1  = (DefaultTableModel) conTabela.getModel();
        int l=mp1.getRowCount();
        
            if(l>0){
                    while(l>0){
                ((DefaultTableModel) conTabela.getModel()).removeRow(l-1);
                              l--;
            }
            }
            try{
                ResultSet   rs=  query.loadTableLog();
                DefaultTableModel mp  = (DefaultTableModel) conTabela.getModel();
                while(rs.next()){
                    String   Coluna0=rs.getString("log").toString().trim();


                    
                    mp.addRow(new String[]{Coluna0});
                    
                }
            }
                catch(SQLException erro){
                        JOptionPane.showMessageDialog(this, "Ocorreu um erro: "+erro,"Preencher Item",2);
                        }
                tamanhocolunas();
                conTabela.setAutoCreateRowSorter(true);
            
        
        // TODO add your handling code here:
    }//GEN-LAST:event_formInternalFrameOpened

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
         
        // TODO add your handling code here:
    }//GEN-LAST:event_formInternalFrameClosed

    private void conSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conSairActionPerformed
        
        dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_conSairActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton conSair;
    private javax.swing.JTable conTabela;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
public void tamanhocolunas(){
conTabela.getColumnModel().getColumn(0).setMinWidth(100);

}


}




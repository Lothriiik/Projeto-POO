/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package View;

import Controller.dadosAlmoxarifadoPedidos;
import Model.addEdit;
import Model.delete;
import Model.query;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author uande
 */
public class telaAlmoxarifadoAlmoxarifadoPedidos extends javax.swing.JInternalFrame {
    dadosAlmoxarifadoPedidos objpes= new dadosAlmoxarifadoPedidos();
    addEdit  AE;
    delete Del;
    /**
     * Creates new form telaConsulta
     */
    public telaAlmoxarifadoAlmoxarifadoPedidos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        almTabela = new javax.swing.JTable();
        almSair = new javax.swing.JButton();
        pedidoentregue = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        almTabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Produtos", "Quantidade", "Setor"
            }
        ));
        jScrollPane1.setViewportView(almTabela);
        if (almTabela.getColumnModel().getColumnCount() > 0) {
            almTabela.getColumnModel().getColumn(0).setPreferredWidth(40);
            almTabela.getColumnModel().getColumn(1).setMinWidth(100);
            almTabela.getColumnModel().getColumn(1).setMaxWidth(100);
            almTabela.getColumnModel().getColumn(2).setMinWidth(150);
            almTabela.getColumnModel().getColumn(2).setMaxWidth(150);
        }

        almSair.setText("Sair");
        almSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                almSairActionPerformed(evt);
            }
        });

        pedidoentregue.setText("Pedido Entregue");
        pedidoentregue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pedidoentregueActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 678, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pedidoentregue, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(almSair, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pedidoentregue, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(almSair, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        setBounds(0, 0, 907, 468);
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        

        DefaultTableModel mp1  = (DefaultTableModel) almTabela.getModel();
        int l=mp1.getRowCount();
        
            if(l>0){
                    while(l>0){
                ((DefaultTableModel) almTabela.getModel()).removeRow(l-1);
                              l--;
            }
            }
            try{
                ResultSet   rs=  query.loadTableAlmoxarifadoPedidos();
                DefaultTableModel mp  = (DefaultTableModel) almTabela.getModel();
                while(rs.next()){
                    String   Coluna0=rs.getString("cod").toString();
                    String   Coluna1=rs.getString("produto").toString().trim();
                    String   Coluna2=rs.getString("quantidade").toString().trim();
                    String   Coluna3=rs.getString("setor").toString().trim();
      
                    mp.addRow(new String[]{Coluna0,Coluna1,Coluna2,Coluna3});
                    
                }
            }
                catch(SQLException erro){
                        JOptionPane.showMessageDialog(this, "Ocorreu um erro: "+erro,"Preencher Item",2);
                        }
                tamanhocolunas();
                almTabela.setAutoCreateRowSorter(true);
            
        
        // TODO add your handling code here:
    }//GEN-LAST:event_formInternalFrameOpened

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
         
        // TODO add your handling code here:
    }//GEN-LAST:event_formInternalFrameClosed

    private void almSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_almSairActionPerformed
        
        dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_almSairActionPerformed

    private void pedidoentregueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pedidoentregueActionPerformed
        int row =  almTabela.getSelectedRow();  
       objpes.setCod(Integer.parseInt((String) almTabela.getValueAt(row,0)));
       objpes.setProduto((String) almTabela.getValueAt(row,1));
       objpes.setQuantidade((String) almTabela.getValueAt(row,2));
       objpes.setSetor((String) almTabela.getValueAt(row,3));
       int cod=objpes.getCod();
       String produto=objpes.getProduto();
       String quantidade=objpes.getQuantidade();
       String setor=objpes.getSetor();

            
            Del  = new delete();
            try{
                
                    if(Del.DeleteAlmoxarifadoPedidos(cod,produto,quantidade,setor)){
                        JOptionPane.showMessageDialog(this,"Pedido entregue ! ");
                    }
                    else{
                        JOptionPane.showMessageDialog(this,"Erro ");
                    }
                    
                
                
            
        }catch( SQLException  error){
            JOptionPane.showMessageDialog(this,"Erro: Exclusão não realizada !" +error.getMessage());
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_pedidoentregueActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton almSair;
    private javax.swing.JTable almTabela;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton pedidoentregue;
    // End of variables declaration//GEN-END:variables
public void tamanhocolunas(){
almTabela.getColumnModel().getColumn(0).setMinWidth(100);
almTabela.getColumnModel().getColumn(1).setMinWidth(250);
}


        
    }





